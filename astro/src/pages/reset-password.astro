---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Reset Password">
  <main class="flex flex-col items-center justify-center min-h-screen p-4">
    <div class="w-full max-w-md p-8 bg-white rounded-lg shadow-lg">
      <h1 class="mb-6 text-2xl font-bold text-center">Reset Password</h1>
      <form id="resetForm" class="space-y-4">
        <div>
          <label for="password" class="block text-sm font-medium text-gray-700">New Password</label>
          <input
            type="password"
            id="password"
            name="password"
            required
            minlength="8"
            class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500"
            placeholder="Enter your new password"
          />
        </div>
        <div>
          <label for="confirmPassword" class="block text-sm font-medium text-gray-700">Confirm Password</label>
          <input
            type="password"
            id="confirmPassword"
            name="confirmPassword"
            required
            minlength="8"
            class="block w-full mt-1 border-gray-300 rounded-md shadow-sm focus:border-blue-500 focus:ring-blue-500"
            placeholder="Confirm your new password"
          />
        </div>
        <div id="status" class="hidden text-center"></div>
        <button
          type="submit"
          class="flex justify-center w-full px-4 py-2 text-sm font-medium text-white bg-blue-600 border border-transparent rounded-md shadow-sm hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500"
        >
          Reset Password
        </button>
      </form>
    </div>
  </main>
</Layout>

<script>
  const params = new URLSearchParams(window.location.search);
  const token = params.get("token");
  const form = document.getElementById("resetForm");
  const statusElement = document.getElementById("status");

  if (!token) {
    statusElement?.classList.remove("hidden");
    if (statusElement) {
      statusElement.innerHTML = `
        <p class="mb-4 text-red-600">No reset token found. Please check your reset link.</p>
      `;
    }
    const button = form?.querySelector("button");
    if (button) button.disabled = true;
  }

  form?.addEventListener("submit", async (e) => {
    e.preventDefault();
    const password = (document.getElementById("password") as HTMLInputElement).value;
    const confirmPassword = (document.getElementById("confirmPassword") as HTMLInputElement).value;
    
    if (password !== confirmPassword) {
      statusElement?.classList.remove("hidden");
      if (statusElement) {
        statusElement.innerHTML = `
          <p class="mb-4 text-red-600">Passwords do not match.</p>
        `;
      }
      return;
    }

    try {
      const { Client } = await import("../lib/Client");
      const client = new Client();
      await client.confirmPasswordReset(token!, password);
      
      statusElement?.classList.remove("hidden");
      if (statusElement) {
        statusElement.innerHTML = `
          <p class="mb-4 text-green-600">Password reset successfully!</p>
          <p class="text-gray-600">You can now log in with your new password.</p>
          <a href="/login" class="inline-block px-4 py-2 mt-4 text-white bg-blue-600 rounded hover:bg-blue-700">
            Go to Login
          </a>
        `;
      }
      form.remove(); // Remove the form after successful reset
    } catch (error) {
      statusElement?.classList.remove("hidden");
      if (statusElement) {
        statusElement.innerHTML = `
          <p class="text-red-600">Failed to reset password: ${error instanceof Error ? error.message : 'Unknown error'}</p>
          <p class="mt-2 text-gray-600">Please try again or contact support if the problem persists.</p>
        `;
      }
    }
  });
</script> 